version: '3.3'
services:
  front-end:
    build:
      context: ./Front-End
      dockerfile: Dockerfile
    environment:
      - VITE_ENV=${NODE_ENV}
    ports:
      - "5173:5173"
  api1: &api
    build:
      context: ./Back-End
      dockerfile: Dockerfile
    environment:
      - HTTP_PORT=3000
      - POOL_SIZE=30
      - SESSION_SECRET=${SESSION_SECRET}
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - postgres
      - redis-sessions
    ports:
      - "3000:3000"
  api2: 
    <<: *api
    environment:
      - HTTP_PORT=3001
    ports:
      - "3001:3001"
  nginx:
    image: nginx
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf 
      - /etc/nginx/ssl:/etc/nginx/ssl  
    depends_on:
      - api1
      - api2
    ports:
      - "80:80"
      - "443:443"
  postgres:
    image: postgres:16.3
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis-sessions:
    image: redis
    restart: on-failure
    hostname: redis-sessions
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: redis-server --save "" --appendonly no --maxclients 20000
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
volumes:
  postgres:
  redis_data:

